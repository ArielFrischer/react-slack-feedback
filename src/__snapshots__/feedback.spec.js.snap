// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SlackFeedback should match the snapshots 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SlackFeedback
    buttonText={
      <span>
        <SlackIcon />
         Slack Feedback
      </span>
    }
    channel="#feedback"
    closeButton="close"
    defaultSelectedType="Bug"
    disabled={false}
    emoji=":bug:"
    errorTimeout={8000}
    feedbackTypes={
      Array [
        Object {
          "label": "Bug",
          "value": "bug",
        },
        Object {
          "label": "Improvement",
          "value": "improvement",
        },
        Object {
          "label": "Feature Request",
          "value": "feature",
        },
      ]
    }
    imageUploadText="Attach Image"
    onImageUpload={[MockFunction]}
    onSubmit={[MockFunction]}
    sentTimeout={5000}
    showChannel={true}
    theme={
      Object {
        "background": "#f4f4f7",
        "border": "#d0d8e1",
        "error": "#ec3c3c",
        "font": "-apple-system, BlinkMacSystemFont, Arial, Arial Unicode, \\"Helvetica Neue\\", Helvetica, \\"Hiragino Sans GB\\", \\"Microsoft YaHei\\", SimSun, sans-serif",
        "input": Object {
          "background": "white",
          "color": "#444444",
          "fontSize": "14px",
          "padding": "0.5em",
        },
        "loader": Object {
          "color": "#ffffff",
          "size": "4em",
          "width": "3px",
        },
        "padding": "0.6em",
        "primary": "#0088ff",
        "secondary": "#222c4f",
        "success": "#3dc86f",
        "text": "#333333",
        "trigger": Object {
          "background": "#ffffff",
          "border": "none",
          "borderRadius": "30px",
          "color": "#333333",
          "fontSize": "13px",
          "padding": "12px 1.25em",
          "shadow": "0 3px 12px 1px rgba(34, 44, 79, 0.1)",
        },
      }
    }
    title={
      <span>
        <SlackIcon />
         Send Feedback to Slack
      </span>
    }
    user="markmur"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styles__SlackFeedback
        className="active"
        innerRef={[Function]}
      >
        <styles__Container
          className="fadeInUp active"
          innerRef={[Function]}
        >
          <styles__Header>
            <span>
              <SlackIcon />
               Send Feedback to Slack
            </span>
            <div
              className="close"
              onClick={[Function]}
            >
              close
            </div>
          </styles__Header>
          <styles__Content>
            <styles__Label>
              Channel
            </styles__Label>
            <styles__FormElement
              disabled={true}
              hidden={false}
              value="#feedback"
            />
            <styles__Label>
              Feedback Type
            </styles__Label>
            <styles__Tabs>
              <li
                className="selected"
                onClick={[Function]}
              >
                Bug
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                Improvement
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                Feature Request
              </li>
            </styles__Tabs>
            <styles__Label>
              Your Message
            </styles__Label>
            <styles__FormElement
              innerRef={[Function]}
              placeholder="Message..."
            />
            <styles__ImageUpload>
              <styles__UploadButton
                htmlFor="imageUpload"
              >
                Attach Image
              </styles__UploadButton>
              <styles__FormElement
                accept="image/*"
                id="imageUpload"
                onChange={[Function]}
                style={
                  Object {
                    "display": "none",
                  }
                }
                type="file"
              />
            </styles__ImageUpload>
            <div
              style={
                Object {
                  "padding": "0.5em 0 1em",
                }
              }
            >
              <styles__Checkbox
                checked={true}
                id="sendURL"
                onChange={[Function]}
                type="checkbox"
              />
              <styles__CheckboxLabel
                htmlFor="sendURL"
              >
                Send URL with Feedback
              </styles__CheckboxLabel>
            </div>
            <styles__SubmitButton
              className=""
              onClick={[Function]}
            >
              Send Feedback
            </styles__SubmitButton>
          </styles__Content>
        </styles__Container>
        <styles__Trigger
          className="active"
          onClick={[Function]}
        >
          <span>
            <SlackIcon />
             Slack Feedback
          </span>
        </styles__Trigger>
      </styles__SlackFeedback>,
      "theme": Object {
        "background": "#f4f4f7",
        "border": "#d0d8e1",
        "error": "#ec3c3c",
        "font": "-apple-system, BlinkMacSystemFont, Arial, Arial Unicode, \\"Helvetica Neue\\", Helvetica, \\"Hiragino Sans GB\\", \\"Microsoft YaHei\\", SimSun, sans-serif",
        "input": Object {
          "background": "white",
          "color": "#444444",
          "fontSize": "14px",
          "padding": "0.5em",
        },
        "loader": Object {
          "color": "#ffffff",
          "size": "4em",
          "width": "3px",
        },
        "padding": "0.6em",
        "primary": "#0088ff",
        "secondary": "#222c4f",
        "success": "#3dc86f",
        "text": "#333333",
        "trigger": Object {
          "background": "#ffffff",
          "border": "none",
          "borderRadius": "30px",
          "color": "#333333",
          "fontSize": "13px",
          "padding": "12px 1.25em",
          "shadow": "0 3px 12px 1px rgba(34, 44, 79, 0.1)",
        },
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styles__Container
            className="fadeInUp active"
            innerRef={[Function]}
          >
            <styles__Header>
              <span>
                <SlackIcon />
                 Send Feedback to Slack
              </span>
              <div
                className="close"
                onClick={[Function]}
              >
                close
              </div>
            </styles__Header>
            <styles__Content>
              <styles__Label>
                Channel
              </styles__Label>
              <styles__FormElement
                disabled={true}
                hidden={false}
                value="#feedback"
              />
              <styles__Label>
                Feedback Type
              </styles__Label>
              <styles__Tabs>
                <li
                  className="selected"
                  onClick={[Function]}
                >
                  Bug
                </li>
                <li
                  className=""
                  onClick={[Function]}
                >
                  Improvement
                </li>
                <li
                  className=""
                  onClick={[Function]}
                >
                  Feature Request
                </li>
              </styles__Tabs>
              <styles__Label>
                Your Message
              </styles__Label>
              <styles__FormElement
                innerRef={[Function]}
                placeholder="Message..."
              />
              <styles__ImageUpload>
                <styles__UploadButton
                  htmlFor="imageUpload"
                >
                  Attach Image
                </styles__UploadButton>
                <styles__FormElement
                  accept="image/*"
                  id="imageUpload"
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </styles__ImageUpload>
              <div
                style={
                  Object {
                    "padding": "0.5em 0 1em",
                  }
                }
              >
                <styles__Checkbox
                  checked={true}
                  id="sendURL"
                  onChange={[Function]}
                  type="checkbox"
                />
                <styles__CheckboxLabel
                  htmlFor="sendURL"
                >
                  Send URL with Feedback
                </styles__CheckboxLabel>
              </div>
              <styles__SubmitButton
                className=""
                onClick={[Function]}
              >
                Send Feedback
              </styles__SubmitButton>
            </styles__Content>
          </styles__Container>,
          <styles__Trigger
            className="active"
            onClick={[Function]}
          >
            <span>
              <SlackIcon />
               Slack Feedback
            </span>
          </styles__Trigger>,
        ],
        "className": "active",
        "innerRef": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styles__Header>
                <span>
                  <SlackIcon />
                   Send Feedback to Slack
                </span>
                <div
                  className="close"
                  onClick={[Function]}
                >
                  close
                </div>
              </styles__Header>,
              <styles__Content>
                <styles__Label>
                  Channel
                </styles__Label>
                <styles__FormElement
                  disabled={true}
                  hidden={false}
                  value="#feedback"
                />
                <styles__Label>
                  Feedback Type
                </styles__Label>
                <styles__Tabs>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Bug
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Improvement
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Feature Request
                  </li>
                </styles__Tabs>
                <styles__Label>
                  Your Message
                </styles__Label>
                <styles__FormElement
                  innerRef={[Function]}
                  placeholder="Message..."
                />
                <styles__ImageUpload>
                  <styles__UploadButton
                    htmlFor="imageUpload"
                  >
                    Attach Image
                  </styles__UploadButton>
                  <styles__FormElement
                    accept="image/*"
                    id="imageUpload"
                    onChange={[Function]}
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                    type="file"
                  />
                </styles__ImageUpload>
                <div
                  style={
                    Object {
                      "padding": "0.5em 0 1em",
                    }
                  }
                >
                  <styles__Checkbox
                    checked={true}
                    id="sendURL"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <styles__CheckboxLabel
                    htmlFor="sendURL"
                  >
                    Send URL with Feedback
                  </styles__CheckboxLabel>
                </div>
                <styles__SubmitButton
                  className=""
                  onClick={[Function]}
                >
                  Send Feedback
                </styles__SubmitButton>
              </styles__Content>,
            ],
            "className": "fadeInUp active",
            "innerRef": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <span>
                    <SlackIcon />
                     Send Feedback to Slack
                  </span>,
                  <div
                    className="close"
                    onClick={[Function]}
                  >
                    close
                  </div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <SlackIcon />,
                      " Send Feedback to Slack",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Send Feedback to Slack",
                  ],
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "close",
                    "className": "close",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "close",
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styles__Label>
                    Channel
                  </styles__Label>,
                  <styles__FormElement
                    disabled={true}
                    hidden={false}
                    value="#feedback"
                  />,
                  <styles__Label>
                    Feedback Type
                  </styles__Label>,
                  <styles__Tabs>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Bug
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Improvement
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Feature Request
                    </li>
                  </styles__Tabs>,
                  <styles__Label>
                    Your Message
                  </styles__Label>,
                  <styles__FormElement
                    innerRef={[Function]}
                    placeholder="Message..."
                  />,
                  <styles__ImageUpload>
                    <styles__UploadButton
                      htmlFor="imageUpload"
                    >
                      Attach Image
                    </styles__UploadButton>
                    <styles__FormElement
                      accept="image/*"
                      id="imageUpload"
                      onChange={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      type="file"
                    />
                  </styles__ImageUpload>,
                  <div
                    style={
                      Object {
                        "padding": "0.5em 0 1em",
                      }
                    }
                  >
                    <styles__Checkbox
                      checked={true}
                      id="sendURL"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <styles__CheckboxLabel
                      htmlFor="sendURL"
                    >
                      Send URL with Feedback
                    </styles__CheckboxLabel>
                  </div>,
                  <styles__SubmitButton
                    className=""
                    onClick={[Function]}
                  >
                    Send Feedback
                  </styles__SubmitButton>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Channel",
                  },
                  "ref": null,
                  "rendered": "Channel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "disabled": true,
                    "hidden": false,
                    "value": "#feedback",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Feedback Type",
                  },
                  "ref": null,
                  "rendered": "Feedback Type",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Bug
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Improvement
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Feature Request
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "bug",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Bug",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Bug",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "improvement",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Improvement",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Improvement",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "feature",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Feature Request",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Feature Request",
                      "type": "li",
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Your Message",
                  },
                  "ref": null,
                  "rendered": "Your Message",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "innerRef": [Function],
                    "placeholder": "Message...",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styles__UploadButton
                        htmlFor="imageUpload"
                      >
                        Attach Image
                      </styles__UploadButton>,
                      <styles__FormElement
                        accept="image/*"
                        id="imageUpload"
                        onChange={[Function]}
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                        type="file"
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Attach Image",
                        "htmlFor": "imageUpload",
                      },
                      "ref": null,
                      "rendered": "Attach Image",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "accept": "image/*",
                        "id": "imageUpload",
                        "onChange": [Function],
                        "style": Object {
                          "display": "none",
                        },
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <styles__Checkbox
                        checked={true}
                        id="sendURL"
                        onChange={[Function]}
                        type="checkbox"
                      />,
                      <styles__CheckboxLabel
                        htmlFor="sendURL"
                      >
                        Send URL with Feedback
                      </styles__CheckboxLabel>,
                    ],
                    "style": Object {
                      "padding": "0.5em 0 1em",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "checked": true,
                        "id": "sendURL",
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Send URL with Feedback",
                        "htmlFor": "sendURL",
                      },
                      "ref": null,
                      "rendered": "Send URL with Feedback",
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Send Feedback",
                    "className": "",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Send Feedback",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <span>
              <SlackIcon />
               Slack Feedback
            </span>,
            "className": "active",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SlackIcon />,
                " Slack Feedback",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " Slack Feedback",
            ],
            "type": "span",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styles__SlackFeedback
          className="active"
          innerRef={[Function]}
        >
          <styles__Container
            className="fadeInUp active"
            innerRef={[Function]}
          >
            <styles__Header>
              <span>
                <SlackIcon />
                 Send Feedback to Slack
              </span>
              <div
                className="close"
                onClick={[Function]}
              >
                close
              </div>
            </styles__Header>
            <styles__Content>
              <styles__Label>
                Channel
              </styles__Label>
              <styles__FormElement
                disabled={true}
                hidden={false}
                value="#feedback"
              />
              <styles__Label>
                Feedback Type
              </styles__Label>
              <styles__Tabs>
                <li
                  className="selected"
                  onClick={[Function]}
                >
                  Bug
                </li>
                <li
                  className=""
                  onClick={[Function]}
                >
                  Improvement
                </li>
                <li
                  className=""
                  onClick={[Function]}
                >
                  Feature Request
                </li>
              </styles__Tabs>
              <styles__Label>
                Your Message
              </styles__Label>
              <styles__FormElement
                innerRef={[Function]}
                placeholder="Message..."
              />
              <styles__ImageUpload>
                <styles__UploadButton
                  htmlFor="imageUpload"
                >
                  Attach Image
                </styles__UploadButton>
                <styles__FormElement
                  accept="image/*"
                  id="imageUpload"
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </styles__ImageUpload>
              <div
                style={
                  Object {
                    "padding": "0.5em 0 1em",
                  }
                }
              >
                <styles__Checkbox
                  checked={true}
                  id="sendURL"
                  onChange={[Function]}
                  type="checkbox"
                />
                <styles__CheckboxLabel
                  htmlFor="sendURL"
                >
                  Send URL with Feedback
                </styles__CheckboxLabel>
              </div>
              <styles__SubmitButton
                className=""
                onClick={[Function]}
              >
                Send Feedback
              </styles__SubmitButton>
            </styles__Content>
          </styles__Container>
          <styles__Trigger
            className="active"
            onClick={[Function]}
          >
            <span>
              <SlackIcon />
               Slack Feedback
            </span>
          </styles__Trigger>
        </styles__SlackFeedback>,
        "theme": Object {
          "background": "#f4f4f7",
          "border": "#d0d8e1",
          "error": "#ec3c3c",
          "font": "-apple-system, BlinkMacSystemFont, Arial, Arial Unicode, \\"Helvetica Neue\\", Helvetica, \\"Hiragino Sans GB\\", \\"Microsoft YaHei\\", SimSun, sans-serif",
          "input": Object {
            "background": "white",
            "color": "#444444",
            "fontSize": "14px",
            "padding": "0.5em",
          },
          "loader": Object {
            "color": "#ffffff",
            "size": "4em",
            "width": "3px",
          },
          "padding": "0.6em",
          "primary": "#0088ff",
          "secondary": "#222c4f",
          "success": "#3dc86f",
          "text": "#333333",
          "trigger": Object {
            "background": "#ffffff",
            "border": "none",
            "borderRadius": "30px",
            "color": "#333333",
            "fontSize": "13px",
            "padding": "12px 1.25em",
            "shadow": "0 3px 12px 1px rgba(34, 44, 79, 0.1)",
          },
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styles__Container
              className="fadeInUp active"
              innerRef={[Function]}
            >
              <styles__Header>
                <span>
                  <SlackIcon />
                   Send Feedback to Slack
                </span>
                <div
                  className="close"
                  onClick={[Function]}
                >
                  close
                </div>
              </styles__Header>
              <styles__Content>
                <styles__Label>
                  Channel
                </styles__Label>
                <styles__FormElement
                  disabled={true}
                  hidden={false}
                  value="#feedback"
                />
                <styles__Label>
                  Feedback Type
                </styles__Label>
                <styles__Tabs>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Bug
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Improvement
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Feature Request
                  </li>
                </styles__Tabs>
                <styles__Label>
                  Your Message
                </styles__Label>
                <styles__FormElement
                  innerRef={[Function]}
                  placeholder="Message..."
                />
                <styles__ImageUpload>
                  <styles__UploadButton
                    htmlFor="imageUpload"
                  >
                    Attach Image
                  </styles__UploadButton>
                  <styles__FormElement
                    accept="image/*"
                    id="imageUpload"
                    onChange={[Function]}
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                    type="file"
                  />
                </styles__ImageUpload>
                <div
                  style={
                    Object {
                      "padding": "0.5em 0 1em",
                    }
                  }
                >
                  <styles__Checkbox
                    checked={true}
                    id="sendURL"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <styles__CheckboxLabel
                    htmlFor="sendURL"
                  >
                    Send URL with Feedback
                  </styles__CheckboxLabel>
                </div>
                <styles__SubmitButton
                  className=""
                  onClick={[Function]}
                >
                  Send Feedback
                </styles__SubmitButton>
              </styles__Content>
            </styles__Container>,
            <styles__Trigger
              className="active"
              onClick={[Function]}
            >
              <span>
                <SlackIcon />
                 Slack Feedback
              </span>
            </styles__Trigger>,
          ],
          "className": "active",
          "innerRef": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styles__Header>
                  <span>
                    <SlackIcon />
                     Send Feedback to Slack
                  </span>
                  <div
                    className="close"
                    onClick={[Function]}
                  >
                    close
                  </div>
                </styles__Header>,
                <styles__Content>
                  <styles__Label>
                    Channel
                  </styles__Label>
                  <styles__FormElement
                    disabled={true}
                    hidden={false}
                    value="#feedback"
                  />
                  <styles__Label>
                    Feedback Type
                  </styles__Label>
                  <styles__Tabs>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Bug
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Improvement
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Feature Request
                    </li>
                  </styles__Tabs>
                  <styles__Label>
                    Your Message
                  </styles__Label>
                  <styles__FormElement
                    innerRef={[Function]}
                    placeholder="Message..."
                  />
                  <styles__ImageUpload>
                    <styles__UploadButton
                      htmlFor="imageUpload"
                    >
                      Attach Image
                    </styles__UploadButton>
                    <styles__FormElement
                      accept="image/*"
                      id="imageUpload"
                      onChange={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      type="file"
                    />
                  </styles__ImageUpload>
                  <div
                    style={
                      Object {
                        "padding": "0.5em 0 1em",
                      }
                    }
                  >
                    <styles__Checkbox
                      checked={true}
                      id="sendURL"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <styles__CheckboxLabel
                      htmlFor="sendURL"
                    >
                      Send URL with Feedback
                    </styles__CheckboxLabel>
                  </div>
                  <styles__SubmitButton
                    className=""
                    onClick={[Function]}
                  >
                    Send Feedback
                  </styles__SubmitButton>
                </styles__Content>,
              ],
              "className": "fadeInUp active",
              "innerRef": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <span>
                      <SlackIcon />
                       Send Feedback to Slack
                    </span>,
                    <div
                      className="close"
                      onClick={[Function]}
                    >
                      close
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <SlackIcon />,
                        " Send Feedback to Slack",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Send Feedback to Slack",
                    ],
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "close",
                      "className": "close",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "close",
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styles__Label>
                      Channel
                    </styles__Label>,
                    <styles__FormElement
                      disabled={true}
                      hidden={false}
                      value="#feedback"
                    />,
                    <styles__Label>
                      Feedback Type
                    </styles__Label>,
                    <styles__Tabs>
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Bug
                      </li>
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Improvement
                      </li>
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Feature Request
                      </li>
                    </styles__Tabs>,
                    <styles__Label>
                      Your Message
                    </styles__Label>,
                    <styles__FormElement
                      innerRef={[Function]}
                      placeholder="Message..."
                    />,
                    <styles__ImageUpload>
                      <styles__UploadButton
                        htmlFor="imageUpload"
                      >
                        Attach Image
                      </styles__UploadButton>
                      <styles__FormElement
                        accept="image/*"
                        id="imageUpload"
                        onChange={[Function]}
                        style={
                          Object {
                            "display": "none",
                          }
                        }
                        type="file"
                      />
                    </styles__ImageUpload>,
                    <div
                      style={
                        Object {
                          "padding": "0.5em 0 1em",
                        }
                      }
                    >
                      <styles__Checkbox
                        checked={true}
                        id="sendURL"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <styles__CheckboxLabel
                        htmlFor="sendURL"
                      >
                        Send URL with Feedback
                      </styles__CheckboxLabel>
                    </div>,
                    <styles__SubmitButton
                      className=""
                      onClick={[Function]}
                    >
                      Send Feedback
                    </styles__SubmitButton>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Channel",
                    },
                    "ref": null,
                    "rendered": "Channel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "disabled": true,
                      "hidden": false,
                      "value": "#feedback",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Feedback Type",
                    },
                    "ref": null,
                    "rendered": "Feedback Type",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <li
                          className="selected"
                          onClick={[Function]}
                        >
                          Bug
                        </li>,
                        <li
                          className=""
                          onClick={[Function]}
                        >
                          Improvement
                        </li>,
                        <li
                          className=""
                          onClick={[Function]}
                        >
                          Feature Request
                        </li>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "bug",
                        "nodeType": "host",
                        "props": Object {
                          "children": "Bug",
                          "className": "selected",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Bug",
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": "improvement",
                        "nodeType": "host",
                        "props": Object {
                          "children": "Improvement",
                          "className": "",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Improvement",
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": "feature",
                        "nodeType": "host",
                        "props": Object {
                          "children": "Feature Request",
                          "className": "",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Feature Request",
                        "type": "li",
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Your Message",
                    },
                    "ref": null,
                    "rendered": "Your Message",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "innerRef": [Function],
                      "placeholder": "Message...",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <styles__UploadButton
                          htmlFor="imageUpload"
                        >
                          Attach Image
                        </styles__UploadButton>,
                        <styles__FormElement
                          accept="image/*"
                          id="imageUpload"
                          onChange={[Function]}
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          type="file"
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Attach Image",
                          "htmlFor": "imageUpload",
                        },
                        "ref": null,
                        "rendered": "Attach Image",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "accept": "image/*",
                          "id": "imageUpload",
                          "onChange": [Function],
                          "style": Object {
                            "display": "none",
                          },
                          "type": "file",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <styles__Checkbox
                          checked={true}
                          id="sendURL"
                          onChange={[Function]}
                          type="checkbox"
                        />,
                        <styles__CheckboxLabel
                          htmlFor="sendURL"
                        >
                          Send URL with Feedback
                        </styles__CheckboxLabel>,
                      ],
                      "style": Object {
                        "padding": "0.5em 0 1em",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "checked": true,
                          "id": "sendURL",
                          "onChange": [Function],
                          "type": "checkbox",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Send URL with Feedback",
                          "htmlFor": "sendURL",
                        },
                        "ref": null,
                        "rendered": "Send URL with Feedback",
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Send Feedback",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Send Feedback",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span>
                <SlackIcon />
                 Slack Feedback
              </span>,
              "className": "active",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <SlackIcon />,
                  " Slack Feedback",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                " Slack Feedback",
              ],
              "type": "span",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
